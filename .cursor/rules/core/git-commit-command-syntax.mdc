---
description: USE ALWAYS when user asks to COMMIT CHANGES
globs: 
alwaysApply: false
---

# How to make git commits

## Context

- When committing changes with git

## Requirements

- If changes are not known, use `git status` and `git diff` to understand the changes.
- Split changes into commits in logical chunks.
- Use rule for git commit messages when crafting the commit message.
- Do not include newlines `\n` in the git commit command.

## Examples

✅ Correct:

```text
git commit -m "feat: <commit description>"
```

✅ Correct: One `-m` for each line

```text
git commit -m "feat: <commit description>" \
  -m "<commit body 1>" \
  -m "<commit body 2>"
```

❌ Incorrect: command contains newline characters

```text
git commit -m "feat: <another message>\n\n<commit body>
```

## CRITICAL

- NEVER use newline characters when applying commands
- ALWAYS use multiple `-m` when submitting multiline commit messages
