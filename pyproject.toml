[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "py-gol"
version = "0.1.0"
description = "Conway's Game of Life implementation in Python"
readme = "README.md"
authors = [
    {name = "dewe", email = "dewe@example.com"}
]
requires-python = ">=3.10"
keywords = ["game-of-life", "terminal", "actors", "concurrent"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Topic :: Games/Entertainment :: Simulation"
]
dependencies = [
    "blessed>=1.20.0",
    "scipy>=1.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.25.0",
    "pytest-cov>=6.0.0",
    "black>=24.0.0",
    "ruff>=0.3.0",
    "mypy>=1.9.0",
    "types-setuptools>=75.0.0",
    "types-scipy>=1.11.0"
]

[project.scripts]
gol = "gol.main:main"

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "rules: tests for Game of Life rules",
    "patterns: tests for pattern evolution",
    "boundaries: tests for boundary conditions"
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["scipy.*"]
ignore_missing_imports = true 