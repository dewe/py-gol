---
description: ENFORCE commit message standards WHEN creating commit messages TO maintain a good git history
globs: 
alwaysApply: false
---

# Commit Message Standards

## Context

- When generating commit messages
- When proposing changes to be committed

## Requirements

- Use conventional commits format: `type(scope): description`
- Focus on WHY the change was made, not just WHAT changed
- Keep messages concise but meaningful
- Limit first line to 72 characters
- If body needed, separate from subject with blank line
- Use imperative mood in subject line

## Examples

✅ Correct:

```text
refactor(types): improve type safety with domain-specific arrays

Using domain-specific array types instead of raw NDArray improves type safety 
and makes array implementations easier to change across the codebase.
```

Good because:

- Explains WHY (improve type safety) not just what
- Concise but meaningful
- Shows impact of the change

❌ Incorrect:

```text
refactor(types): use domain-specific array types

- Use IntArray instead of NDArray[np.int_] in grid.py and life.py
- Use BoolArray for numpy boolean arrays
- Remove unused NDArray imports
```

Bad because:

- Lists WHAT changed without explaining WHY
- Reads like a changelog
- No indication of benefits or motivation

## CRITICAL

- NEVER just list the changes made
- ALWAYS explain the motivation/benefit
- Keep subject line clear and concise
