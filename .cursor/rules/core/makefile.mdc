---
description: 
globs: Makefile,**/Makefile
alwaysApply: false
---

# Makefile Standards

## Context

- Applied when creating or modifying Makefiles
- Used for project automation and build tasks
- Focuses on Python project requirements

## Requirements

### Structure

- Declare PHONY targets at the top
- Group related targets with comments
- Use tabs for indentation (required by Make)
- Document all targets in help target
- Default target: help

### Core Targets

Must include these standard targets:
- `init`: Install dependencies
- `test`: Run test suite
- `clean`: Remove build artifacts
- `format`: Auto-format code
- `lint`: Run all linters
- `help`: Show available targets

### Variables

- Use `:=` for immediate assignment
- Use `?=` for default values
- Define common variables at top
- Use `$$` for shell variables

### Dependencies

- List all target dependencies
- Chain related targets with dependencies

## Examples

✅ Correct: clear target groups, documented help, proper indentation

```makefile
.PHONY: init test clean format lint

# Development setup
init:
	pip install -e ".[dev]"

# Testing
test:
	pytest -v tests/

help:
	@echo "make init      - Install dependencies"
	@echo "make test      - Run tests"
```

❌ Incorrect: missing PHONY, wrong indentation, undocumented targets

```makefile
test:
pip test  # Wrong indentation
format: 
black .    # Missing target documentation
```

## Command Patterns

### Shell Commands

- Use `@` to suppress command echo
- Use `$(shell ...)` for shell operations
- Chain commands with `&&`
- Use `-` prefix when errors should be ignored

### Error Handling

- Set `-e` for error propagation
- Use conditional execution
- Provide clean error messages 
